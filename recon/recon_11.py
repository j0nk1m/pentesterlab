#OBJECTIVE
#For this challenge, your goal is to brute a virtual host.

#VIRTUAL HOST BRUTE FORCING
#In this challenge, you need to brute force a virtual host by only manipulating the Host header. There is no DNS resolution setup for this host. Therefore you will need to target hackycorp.com and bruteforce the virtual host (that ends in .hackycorp.com).

from urllib.request import Request, urlopen
import concurrent.futures

NUM_THREADS = 10
file_list = open("subdomains-top1million-110000.txt", "r")
req = Request('https://www.hackycorp.com')
list = []

def subdom_check(subs):
    host=subs.strip('\n')
    req.add_header('Host', f'{host}.hackycorp.com')
    try:
        content = urlopen(req)
        length = content.getheader('Content-Length')
        stuff = content.read()
        recon11 = b'recon_11'
        if recon11 in stuff:
            print(host,stuff,length)
            list.append({"Host": host, "Content": stuff, "Length": length})
        if recon11 not in stuff:
            print(host,stuff,length,"            ",end='\r')
    
    except Exception as e:
        print('Error', e)
        
with concurrent.futures.ThreadPoolExecutor(max_workers=NUM_THREADS) as executor:
    executor.map(subdom_check, file_list)

print(list)
